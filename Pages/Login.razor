@layout BlankLayout
@page "/"
@using BlazorApp.Data.Authentication
@inject AuthenticationStateProvider authenticationStateProvider
@inject NavigationManager navigationManager
@inject Blazored.SessionStorage.ISessionStorageService sessionStorage

<div class="d-flex align-items-center min-vh-100">
    <div class="container">
        <div class="row">
            <div class="col-md-3 d-flex align-items-center justify-content-center form-group">
                <img src="img/protokkoli_logo.svg" class="img" height="256px" width="256px" alt="Logo Protokkoli">
            </div>

            <div class="col-md-6 my-auto">
                <EditForm Model="@_user" OnValidSubmit="@ValidateUser">
                    <div class="row">
                        <div class="col-md-12 form-group">
                            <input type="text" @bind="_user.Name" class="form-control" placeholder="Benutzername"/>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-12 form-group">
                            <input type="password" @bind="_user.Password" class="form-control" placeholder="Passwort"/>
                        </div>
                    </div>
                    <div class="row form-group">
                        <div class="col-md-12">
                            <input type="submit" class="btn-primary btn-block" value="Login"/>
                        </div>
                    </div>
                </EditForm>
            </div>
        </div>
    </div>
</div>


@code {
    private User _user;
    private CustomAuthenticationStateProvider _authenticationStateProvider;

    protected override Task OnInitializedAsync()
    {
        _user = new User();
        _authenticationStateProvider = (CustomAuthenticationStateProvider) authenticationStateProvider;
        return base.OnInitializedAsync();
    }

    private async Task<bool> ValidateUser()
    {
        Console.WriteLine("Called");
        _authenticationStateProvider.MarkUserAsLoggedIn(_user.Name);
        navigationManager.NavigateTo("/home");
        await sessionStorage.SetItemAsync("currentUserName", _user.Name);

        return await Task.FromResult(true);
    }

}